#!/usr/bin/lua
--[[
    Karl Palsson, 2017 <karlp@etactica.com>
]]
local pl = require("pl.import_into")()
local core = require("remake.output-dexma-core")

local cliargs = pl.lapp [[
  Basic output to dexma
  if key_file is provided, the environment var is ignored.
  the name of the environment var can be changed to allow multiple instances.
    -H,--mqtt_host (default "localhost") MQTT host to listen to
    -i,--id (string) identifier for dexma
    -k,--key (default "DEXMA_KEY") environment variable or file containing private key
    -f,--key_is_file using this means that -k refers to a file, not an env var
    -v,--verbose (0..7 default 5) Logging level, higher == more
    -C,--cafile (string default "") path to ca bundle
    -c,--capath (string default "") path to directory of certs
    -n,--nopost Don't post anything to dexma, just dump what would have been posted.
]]

local ugly = require("remake.uglylog")
ugly.initialize("output-dexma", cliargs.verbose or 4)

core.init(cliargs)
local ok, err = pcall(core.main)
if not ok then
	ugly.emerg("Crashed! %s", err)
	os.exit(1)
end